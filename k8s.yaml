
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-sa-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: admin-sa
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasky-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tasky
  template:
    metadata:
      labels:
        app: tasky
    spec:
      serviceAccountName: admin-sa
      containers:
      - name: tasky-container
        image: cristianpopa/tasky:v5
        ports:
        - containerPort: 8080
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongouri
              key: MONGODB_URI
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: secretkey
              key: SECRET_KEY
        resources:
          requests:
            memory: "256Mi"  
            cpu: "250m"     
          limits:
            memory: "512Mi"  
            cpu: "500m"     
---
apiVersion: v1
kind: Service
metadata:
  name: tasky-service

spec:
  selector:
    app: tasky
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tasky
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/subnets: subnet-027293b049f307454,subnet-0b3b9b54529ae6ace
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports:  '[{"HTTPS": 443}]'

spec:
  ingressClassName: alb
  tls: 
  - hosts:
    - tasky.cipopa.com
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: tasky-service
              port:
                number: 80